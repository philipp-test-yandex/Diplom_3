{"name": "Переход в личный кабинет после авторизации", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_personal_account.TestPersonalAccount object at 0x102fb0ad0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8ab7409616f6f8471282922db94c33ef\")>\napi_user = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MmI3ZmRmOWVkMjgwMDAxYjVmMmUxYyIsImlhdCI6MTc0...QnJFDt7XooK7pZDoolAH6WSv-DSFoiU', 'email': 'user1747681247116@test.com', 'name': 'TestUser1418', 'password': 'Test123'}\n\n    @allure.title(\"Переход в личный кабинет после авторизации\")\n    def test_go_to_personal_account(self, driver, api_user):\n        page = PersonalAccount(driver)\n        page.open_main_page()\n        page.click_button_personal_account()\n        page.enter_email(api_user[\"email\"])\n        page.enter_password(api_user[\"password\"])\n        page.click_login_button()\n        page.click_button_personal_account()\n>       page.check_on_account_profile_page()\n\ntests/test_personal_account.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/personal_account_page.py:32: in check_on_account_profile_page\n    self.wait_for_url_to_be(PROFILE_URL)\npages/base_page.py:22: in wait_for_url_to_be\n    self.wait.until(EC.url_to_be(expected_url))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8ab7409616f6f8471282922db94c33ef\")>, method = <function url_to_be.<locals>._predicate at 0x102fa6f20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "steps": [{"name": "Открыть главную страницу", "status": "passed", "start": 1747681248496, "stop": 1747681252013}, {"name": "Клик по кнопке 'Личный Кабинет'", "status": "passed", "start": 1747681252013, "stop": 1747681252079}, {"name": "Ввести email", "status": "passed", "parameters": [{"name": "email", "value": "'user1747681247116@test.com'"}], "start": 1747681252079, "stop": 1747681252164}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'Test123'"}], "start": 1747681252164, "stop": 1747681252200}, {"name": "Нажать кнопку 'Войти'", "status": "passed", "start": 1747681252200, "stop": 1747681252227}, {"name": "Клик по кнопке 'Личный Кабинет'", "status": "passed", "start": 1747681252227, "stop": 1747681252262}, {"name": "Проверить, что открыта страница профиля", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/personal_account_page.py\", line 32, in check_on_account_profile_page\n    self.wait_for_url_to_be(PROFILE_URL)\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/base_page.py\", line 22, in wait_for_url_to_be\n    self.wait.until(EC.url_to_be(expected_url))\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1747681252262, "stop": 1747681257362}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1747681248495, "stop": 1747681257365, "uuid": "d65db2b8-5168-4977-bfdf-bf889bed43ce", "historyId": "730c2a4ed352d73d279427d4042b2ad1", "testCaseId": "e8a22037306e1a88db1bb07763225fa8", "fullName": "tests.test_personal_account.TestPersonalAccount#test_go_to_personal_account", "labels": [{"name": "feature", "value": "Личный кабинет"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_personal_account"}, {"name": "subSuite", "value": "TestPersonalAccount"}, {"name": "host", "value": "MacBook-Pro-Filipp-2.local"}, {"name": "thread", "value": "47143-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_personal_account"}]}