{"name": "Проверка отображения заказов пользователя в ленте заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_orders_feed.TestOrdersFeed object at 0x102fb06b0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"86d52fc2-b5b8-410d-afe1-7006d72cad93\")>\napi_user = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MmI3Zjg2OWVkMjgwMDAxYjVmMmRmZiIsImlhdCI6MTc0...0asT7KHnerOirXFuHDFoZdzRS0Nasck', 'email': 'user1747681157314@test.com', 'name': 'TestUser2215', 'password': 'Test123'}\n\n    @allure.title(\"Проверка отображения заказов пользователя в ленте заказов\")\n    def test_users_orders_show_on_feed_page(self, driver, api_user):\n        page = OrdersFeed(driver)\n    \n        page.open_main_page()\n        page.click_button_personal_account()\n        page.enter_email(api_user[\"email\"])\n        page.enter_password(api_user[\"password\"])\n        page.click_login_button()\n        page.drag_and_drop_first_ingredient_to_cart()\n        page.click_confirm_order_button()\n>       page.click_icon_close()\n\ntests/test_orders_feed.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/orders_feed_page.py:115: in click_icon_close\n    self.wait_for_order_number_change()\npages/orders_feed_page.py:124: in wait_for_order_number_change\n    self.wait_until(\npages/base_page.py:49: in wait_until\n    return WebDriverWait(self.driver, timeout).until(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"86d52fc2-b5b8-410d-afe1-7006d72cad93\")>, method = <function OrdersFeed.wait_for_order_number_change.<locals>.<lambda> at 0x10305a7a0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "steps": [{"name": "Открыть главную страницу сайта", "status": "passed", "start": 1747681158506, "stop": 1747681163260}, {"name": "Клик по кнопке 'Личный Кабинет'", "status": "passed", "start": 1747681163261, "stop": 1747681163530}, {"name": "Ввести email", "status": "passed", "parameters": [{"name": "email", "value": "'user1747681157314@test.com'"}], "start": 1747681163530, "stop": 1747681163570}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'Test123'"}], "start": 1747681163570, "stop": 1747681163590}, {"name": "Нажать кнопку 'Войти'", "status": "passed", "start": 1747681163591, "stop": 1747681163810}, {"name": "Перетащить первый ингредиент в корзину", "status": "passed", "start": 1747681163810, "stop": 1747681164362}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1747681164362, "stop": 1747681164593}, {"name": "Закрыть модальное окно заказа после появления реального номера", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/orders_feed_page.py\", line 115, in click_icon_close\n    self.wait_for_order_number_change()\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/orders_feed_page.py\", line 124, in wait_for_order_number_change\n    self.wait_until(\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/base_page.py\", line 49, in wait_until\n    return WebDriverWait(self.driver, timeout).until(condition)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "Ожидание смены номера заказа с '9999' на реальный", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/orders_feed_page.py\", line 124, in wait_for_order_number_change\n    self.wait_until(\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/pages/base_page.py\", line 49, in wait_until\n    return WebDriverWait(self.driver, timeout).until(condition)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/philippaslapov/PycharmProjects/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "timeout", "value": "10"}], "start": 1747681164599, "stop": 1747681174946}], "start": 1747681164593, "stop": 1747681174948}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1747681158506, "stop": 1747681174949, "uuid": "73173015-11f9-4baf-b042-34e34249aaa0", "historyId": "a9da5497eafcbe91911fe8afda5f479d", "testCaseId": "63835686947c5c1214a73ac81bf8fdc5", "fullName": "tests.test_orders_feed.TestOrdersFeed#test_users_orders_show_on_feed_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orders_feed"}, {"name": "subSuite", "value": "TestOrdersFeed"}, {"name": "host", "value": "MacBook-Pro-Filipp-2.local"}, {"name": "thread", "value": "47143-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orders_feed"}]}